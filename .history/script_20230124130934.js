'use strict';
// 1 Lect

// const bookings = [];

// const createBooking = function (
//   flightNum,
//   numPassengers = 1,
//   price = 199 * numPassengers // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ Undefined. –í ES 6 –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–Ω–µ–µ –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
// ) {
//   // ES 5
//   //   numPassengers = numPassengers || 1;
//   //   price = price || 199;

//   const booking = {
//     flightNum,
//     numPassengers,
//     price,
//   };
//   console.log(booking);
//   bookings.push(booking);
// };

// createBooking('LH123');
// createBooking('LH123', 2); // price = 398
// createBooking('LH123', 5); // price = 995
// createBooking('LH123', undefined, 1000);  //scip param 'LH123', numPassengers: 1, price: 1000.  –ß—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –º–æ–∂–Ω–æ –ø—Ä–∏—Ä–∞–≤–Ω—è—Ç—å –∫ Undefined –∏

// 2 Lection First-Class and Higher-Order Functions
// const flight = 'LH234';
// const yevhen = {
//   name: 'Yevhen Miroshnychenko',
//   passport: 2474732349934,
// };

// const checkIn = function (flightNum, passenger) {
//   flightNum = 'LH999';
//   passenger.name = 'Mr.' + passenger.name;

//   if (passenger.passport === 2474732349934) {
//     alert('Checked in');
//   } else {
//     alert('Wrong passport!');
//   }
// };
// // checkIn(flight, yevhen);
// console.log(flight);
// console.log(yevhen);

// –¢–æ–∂–µ —Å–∞–º–æ–µ, —á—Ç–æ...
// const flightNum = flight;
// const passenger = yevhen;

// const newPassport = function (person) {
//   person.passport = Math.trunc(Math.random() * 100000000);
// };
// newPassport(yevhen);
// checkIn(flight, yevhen);

///////////////// Lect3 . Functions Accepting Callback Functions

// const oneWord = function (str) {
//   return str.replaceAll(/ /g, '').toLowerCase(); // –£–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã
// };

// const upperFirstWord = function (str) {
//   const [first, ...others] = str.split(' ');
//   return [first.toUpperCase(), ...others].join(' '); // Spread –∏ –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è
// };

// // Higher-order function
// const transformer = function (str, fn) {
//   console.log(`Original string: ${str}`);
//   console.log(`Transformed string: ${fn(str)}`);

//   console.log(`Transformed by: ${fn.name}`);
// };
// transformer('JavaScript iS ThE Best!', upperFirstWord); // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–ª–±—ç–∫ —Ñ—É–Ω–∫—Ü–∏—é
// transformer('JavaScript is the best!', oneWord); // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–ª–±—ç–∫ —Ñ—É–Ω–∫—Ü–∏—é

// // JS –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ–ª–ª–±—ç–∫–∏ –æ—á–µ–Ω—å —á–∞—Å—Ç–æ
// const high5 = function () {
//   // Low level of abstraction function
//   console.log('üëã');
// };
// document.body.addEventListener('click', high5); // High level of abstraction function
// ['Jonas', 'Marta', 'Patrik'].forEach(high5);

//////////////// Lect 4 Functions returning functions

const greet = function (greeting) {
  return function (name) {
    console.log(`${greeting} ${name}`);
  };
};

const greeterHey = greet('Hey');
greeterHey('Jonas');
greeterHey('Steven');

greet('Hello')('Jonas');
